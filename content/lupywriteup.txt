Going Lupy

Opensource search solutions were investigated for finding how they compare to
previous INEX [6] results, and providing a framework for experiments. Apache's
Jakarta Lucene [1] seems the most mature solution, however as the python
programming language [4] is favoured, Lupy (a python port of Lucene) from
divmod [2] was chosen.

Lupy is a full text indexer that uses an inverted index. It is distributed
under the GNU LESSER General Public License [3], and is packaged as a python
module. Therefore code needed to be written to manage and parse the IEEE
document collection for Lupy's indexing. Further code needed to be written to
convert INEX topics into queries that Lupy could use, and output INEX result
XML.

This proved to be quite a challenge, as both the XML parsing libraries [5] and
Lupy were found to have elusive bugs. Furthermore parsing the 536M of INEX
documents and creating the index with ASCII instead of Unicode alone eventually
proved to be a memory strain. One gigabyte of memory proved just sufficient to
create an index overnight.  

The comparison

As a basic benchmark, the previous year's topic queries were ran through the
search.  The results were then ranked against the 48 participants of that year's
result submissions.

The index was constructed of the full text of every IEEE article. Using
keywords and title from all the CO topics as a boolean OR search, the results
compared to the 2002 results ranked 13 in strict and 9 in generalised.

A framework to leverage

Introducing for example dates or maximals associated with each XML article or
component as another field in the index is provided for in the design.

Queries can utilise different types of queries, be broken up and re-assembled
to fine tune scoring weights of for instance the topic's title, description and
keywords weight. 

The choices are already interesting alone with just Term, Phrase and Boolean
type queries.  Lupy will eventually have support for more queries that Lucene
now offers, such as MultiTerm, Fuzzy, WildCard, Prefix, Range and Sloppy
phrase queries.

Looking ahead

2003 topic phrases, "must be about" and "must not be about" features have
already been implemented.  Unicode problems will be addressed and XML handling
is improving.

Results from Lupy were not submitted this year as the comparison's results of
2002 were not better than the group's primary mature clustering approach.

Based on the favourable results in this year's assessments, improved results
based on a Lupy based infrastructure should warrant an inclusion into next
years result submissions.

[1] http://jakarta.apache.org/lucene/
[2] http://www.divmod.org/Home/Projects/Lupy/
[3] http://www.gnu.org/copyleft/lesser.html
[4] http://www.python.org/
[5] http://pyxml.sourceforge.net/topics/
[6] http://inex.is.informatik.uni-duisburg.de:2003/

56 Official submissions:

UHel-Run3:
    quantization: strict 
        rank: 21
    quantization: generalized
        rank: 38
Lupy:
    quantization: strict 
        rank: 23
    quantization: generalized
        rank: 40
UHel-Run2:
    quantization: strict 
        rank: 33
    quantization: generalized
        rank: 39
UHel-Run1:
    quantization: strict 
        rank: 50
    quantization: generalized
        rank: 45

